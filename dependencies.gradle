ext {

    def coroutines_version = "1.3.0"
    kotlinLibraries = [
            jdk               : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}",
            coroutines_android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}",
            coroutines_core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}",
    ]

    def appcompat_version = "1.1.0"
    def core_ctx_version = "1.1.0"
    def constraint_layout_version = "1.1.3"
    def lifecycle_version = "2.1.0"
    def navigation_version = "2.1.0"
    def room_version = "2.2.1"
    def legacy_support_version = "1.0.0"
    androidXLibraries = [
            appcompat           : "androidx.appcompat:appcompat:${appcompat_version}",
            core_ctx            : "androidx.core:core-ktx:${core_ctx_version}",
            constraint_layout   : "androidx.constraintlayout:constraintlayout:${constraint_layout_version}",
            lifecycle_extensions: "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}",
            lifecycle_viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}",
            navigation_fragment : "androidx.navigation:navigation-fragment-ktx:${navigation_version}",
            navigation_ui       : "androidx.navigation:navigation-ui-ktx:${navigation_version}",
            room_runtime        : "androidx.room:room-runtime:${room_version}",
            room                : "androidx.room:room-ktx:${room_version}",
            legacy_support      : "androidx.legacy:legacy-support-v4:${legacy_support_version}",
    ]

    androidXProcessors = [
            room_compiler: "androidx.room:room-compiler:${room_version}",
    ]

    def retrofit2_version = "2.6.2"
    def okhttp3_version = "4.2.1"
    networkingLibraries = [
            retrofit2                  : "com.squareup.retrofit2:retrofit:${retrofit2_version}",
            retrofit2_gson_converter   : "com.squareup.retrofit2:converter-gson:${retrofit2_version}",
            okhttp3_logging_interceptor: "com.squareup.okhttp3:logging-interceptor:${okhttp3_version}",
    ]

    def dagger_version = '2.25.2'
    daggerLibraries = [
            dagger: "com.google.dagger:dagger:${dagger_version}",
    ]

    daggerProcessors = [
            dagger_compiler: "com.google.dagger:dagger-compiler:${dagger_version}",
    ]

    def glide_version = "4.8.0"
    def touch_image_view_version = "2.2.0"
    uiLibraries = [
            glide           : "com.github.bumptech.glide:glide:${glide_version}",
            touch_image_view: "com.github.MikeOrtiz:TouchImageView:${touch_image_view_version}",
    ]

    uiProcessors = [
            glide_compiler: "com.github.bumptech.glide:compiler:${glide_version}"
    ]

    testLibraries = [
            coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0",
            junit          : "junit:junit:4.12",
            mockito_core   : "org.mockito:mockito-core:1.10.19",
    ]

    androidTestLibraries = [
            junit           : "androidx.test.ext:junit:1.1.1",
            espresso_core   : "androidx.test.espresso:espresso-core:3.2.0",
            espresso_contrib: "androidx.test.espresso:espresso-contrib:3.2.0",
            rules           : "androidx.test:rules:1.2.0",
    ]
}